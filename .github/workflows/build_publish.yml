name: Build and Publish
on:
  push:
    branches:
      - 'experiment/**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

  workflow_dispatch:

env:
  AWS_REGION : "ap-south-1"

jobs:
  build-publish-docker:
    name: Build & Publish Docker Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ARN_ROLE_BASE }}/ecr-identity-provider-role
          role-session-name: bahmniwebrolesession
          aws-region: ${{ env.AWS_REGION }}

      - name: Use Node.js 10.16.3
        uses: actions/setup-node@v1
        with:
          node-version: 10.16.3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - run: npm install -g bower
      - run: npm install -g grunt-cli
      - run: gem install compass -v 1.0.3
      - run: npm install --global yarn

      - name: Package
        run: cd ui && yarn cache clean && /bin/bash ./scripts/package.sh

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: bahmni-web
          GH_SHA: ${{ github.sha }}
          RUN_NUMBER: ${{ github.run_number }}
        run: |
          docker buildx create --use --name ghaBuilder

          docker buildx build --platform linux/amd64,linux/arm64 \
            -t $REGISTRY/$REPOSITORY:latest \
            -t $REGISTRY/$REPOSITORY:$GH_SHA \
            -t $REGISTRY/$REPOSITORY:$RUN_NUMBER \
            --push \
            -f package/docker/Dockerfile .